/**
 * 
 */
package cn.sx.decentworld.adapter;

import java.util.List;

import cn.sx.decentworld.DecentWorldApp;
import cn.sx.decentworld.R;
import cn.sx.decentworld.common.CommUtil;
import cn.sx.decentworld.engine.UserInfoEngine;
import cn.sx.decentworld.entity.dao.ContactUserDao;
import cn.sx.decentworld.entity.db.CommentEntity;
import cn.sx.decentworld.utils.TimeUtils;
import android.content.Context;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseAdapter;
import android.widget.TextView;

/**
 * @ClassName: MomentCommentAdapter.java
 * @Description: 作品圈评论列表
 * @author: cj
 * @date: 2016年4月15日 下午3:11:01
 */
public class MomentCommentAdapter extends BaseAdapter
{
    // 评论列表数据
    private List<CommentEntity> mCommentList;
    // 上下文对象
    private Context context;
    // 布局填充器
    private LayoutInflater inflater;

    /**
     * 构造函数
     */
    public MomentCommentAdapter(Context context, List<CommentEntity> mCommentList)
    {
        this.context = context;
        this.mCommentList = mCommentList;
        this.inflater = LayoutInflater.from(context);
    }

    @Override
    public View getView(int position, View convertView, ViewGroup parent)
    {
        CommentEntity commentEntity = getItem(position);
        String dwID = commentEntity.getDwID();
        String reply = commentEntity.getReply();
        String content = commentEntity.getContent();
        ViewHolder holder = new ViewHolder();
        if (CommUtil.isBlank(reply))
        {
            // 评论朋友圈
            convertView = inflater.inflate(R.layout.item_moment_comment, null);
            holder.mTvName = (TextView) convertView.findViewById(R.id.tv_moment_comment_name);
            holder.mTvContent = (TextView) convertView.findViewById(R.id.tv_moment_comment_content);
            holder.mTvTime = (TextView) convertView.findViewById(R.id.tv_moment_comment_time);
        }
        else
        {
            // 回复评论
            convertView = inflater.inflate(R.layout.item_moment_reply, null);
            holder.mTvName = (TextView) convertView.findViewById(R.id.tv_moment_reply_name);
            holder.mTvName2 = (TextView) convertView.findViewById(R.id.tv_moment_reply_name2);
            holder.mTvContent = (TextView) convertView.findViewById(R.id.tv_moment_reply_content);
            holder.mTvTime = (TextView) convertView.findViewById(R.id.tv_moment_reply_time);
            holder.mTvName2.setText(getName(reply));
        }
        // 提取回复者的名字
        holder.mTvName.setText(getName(dwID));
        String time = TimeUtils.toMsgFormat(commentEntity.getTime());
        holder.mTvTime.setText(time);
        holder.mTvContent.setText(commentEntity.getContent());
        return convertView;
    }

    @Override
    public int getCount()
    {
        return mCommentList.size();
    }

    @Override
    public CommentEntity getItem(int position)
    {
        return mCommentList.get(position);
    }

    @Override
    public long getItemId(int position)
    {
        return position;
    }

    class ViewHolder
    {
        TextView mTvName;
        TextView mTvName2;
        TextView mTvContent;
        TextView mTvTime;
    }

    /**
     * 获取名字
     */
    private String getName(String dwID)
    {
        String name = "";
        if (CommUtil.isNotBlank(dwID))
        {
            if (dwID.equals(DecentWorldApp.getInstance().getDwID()))
                name = UserInfoEngine.getInstance().getShowName();
            else
                name = ContactUserDao.getName(dwID);
            if (CommUtil.isBlank(name))
                name = "[已删除]";
        }
        else
        {
            name = "无";
        }
        return name;
    }

}
