/**
 * 
 */
package cn.sx.decentworld.utils;

import java.util.HashMap;
import java.util.Map;

import org.jivesoftware.smack.ReconnectionManager;

import cn.sx.decentworld.logSystem.LogUtils;

/**
 * @ClassName: ThreadUtils.java
 * @Description:
 * @author: cj
 * @date: 2015年12月3日 上午9:38:35
 */
public class ThreadUtils
{
    private static final String TAG = "ThreadUtils";

    public static void printAllThreads()
    {
        Thread ta[] = new Thread[Thread.activeCount()];
        Thread.enumerate(ta);
        StringBuffer sb = new StringBuffer();
        for (Thread t : ta)
        {
            if (t != null)
                sb.append("The thread name is:"+t.getName()+"\n");
        }
        LogUtils.v(TAG, "printAllThreads...Alive thread has:\n" + sb.toString());
    }

    /**
     * 收集线程信息
     * @return
     */
    public static Map<String, String> getThreadInfo()
    {
        Map<String, String> map = new HashMap<String, String>();
        Thread ta[] = new Thread[Thread.activeCount()];
        Thread.enumerate(ta);
        StringBuffer sb = new StringBuffer();
        for (Thread t : ta)
        {
            if (t != null)
            {
                map.put(t.getName(), t.getId()+"");
                sb.append("The thread name is:"+t.getName()+"\n");
            }
        }
        LogUtils.v(TAG, "getThreadInfo...Alive thread has:\n" + sb.toString());
        return map;
    }
    
    
    /**
     * 判断重连线程是否存在
     * @return
     */
    public static boolean isExitOfReconnectThread()
    {
        boolean isExit = false;
        Map<String, String> map = new HashMap<String, String>();
        Thread ta[] = new Thread[Thread.activeCount()];
        Thread.enumerate(ta);
        StringBuffer sb = new StringBuffer();
        for (Thread t : ta)
        {
            sb.append("The thread name is:"+t.getName()+"\n");
            if (t != null && t.getName().equals(ReconnectionManager.ReconnectThread))
            {
                LogUtils.v(TAG, "isExitOfReconnectThread...Alive thread has:\n" + sb.toString());
                return true;
            }
        }
        return isExit;
    }

}
