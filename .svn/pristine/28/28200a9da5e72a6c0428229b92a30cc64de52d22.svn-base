package cn.sx.decentworld.activity;

import java.util.HashMap;
import java.util.Timer;
import java.util.TimerTask;

import android.app.ProgressDialog;
import android.content.Intent;
import android.os.Handler;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import cn.sx.decentworld.DecentWorldApp;
import cn.sx.decentworld.R;
import cn.sx.decentworld.common.ConstantIntent;
import cn.sx.decentworld.common.ConstantNet;
import cn.sx.decentworld.common.Constants;
import cn.sx.decentworld.component.KeyboardComponent;
import cn.sx.decentworld.engine.UserInfoEngine;
import cn.sx.decentworld.logSystem.LogUtils;
import cn.sx.decentworld.network.SendUrl;
import cn.sx.decentworld.network.SendUrl.HttpCallBack;
import cn.sx.decentworld.network.entity.ResultBean;
import cn.sx.decentworld.utils.ToastUtil;

import com.android.volley.Request.Method;
import com.googlecode.androidannotations.annotations.AfterViews;
import com.googlecode.androidannotations.annotations.Bean;
import com.googlecode.androidannotations.annotations.Click;
import com.googlecode.androidannotations.annotations.EActivity;
import com.googlecode.androidannotations.annotations.ViewById;

@EActivity(R.layout.activity_recharge_ali_pay_wx)
public class RechargeAliPayWXActivity extends BaseFragmentActivity {
    private static final String TAG ="RechargeAliPayWXActivity";
	@ViewById(R.id.et_money)
	EditText etMoney;
	@ViewById(R.id.ll_pay_method)
	LinearLayout llpayMethod;
	@ViewById(R.id.iv_back)
	ImageView ivBack;
	@ViewById(R.id.tv_header_title)
	TextView tvTitle;
	@ViewById(R.id.btn_ensure)
	Button btnEunsre;
	public static String WORTH = "WORTH";
	private SendUrl mSendurl;
    private Handler mHandler = new Handler()
    {
        public void handleMessage(android.os.Message msg)
        {
            ToastUtil.showToast("设置身价成功");
            LogUtils.d(TAG, Constants.TEST_TAG +"mHandler ,");
            String worth = etMoney.getText().toString();
            UserInfoEngine.getInstance().notifyWorthChanged(Float.valueOf(worth));
            finish();
        };
    };

	@AfterViews
	public void init() {
		openKeyboard();
		mSendurl = new SendUrl(this);
		tvTitle.setText("修改身价");
		llpayMethod.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {
				if (etMoney.length() <= 0) {
					ToastUtil.showToast("请先输入金额");
					return;
				}
				String money = etMoney.getText().toString();
				Integer data = Integer.valueOf(money);
				if (data < 2) {
					ToastUtil.showToast("输入金额不能小于2元");
					return;
				}
				Intent intent = new Intent(mContext, RechargePayMethodActivity_.class);
				intent.putExtra(WORTH, etMoney.getText().toString());
				intent.putExtra(ConstantIntent.COMMOM_IS_TO_SOCIALSTATUSACTIVITY, 1);
				startActivity(intent);
			}
		});
		ivBack.setVisibility(View.VISIBLE);
		ivBack.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View arg0) {
				finish();
			}
		});
		btnEunsre.setOnClickListener(new OnClickListener() {

			@Override
			public void onClick(View v) {
				if (etMoney.length() <= 0) {
					ToastUtil.showToast("请先输入金额");
					return;
				}
				HashMap<String, String> map = new HashMap<String, String>();
				map.put(Constants.DW_ID, DecentWorldApp.getInstance().getDwID());
				map.put("worth", etMoney.getText().toString());
				showProgressDialog();
				mSendurl.httpRequestWithParams(map, Constants.CONTEXTPATH + ConstantNet.API_SET_WORTH, Method.GET,
						new HttpCallBack() {

							@Override
							public void onSuccess(String resultJSON, ResultBean resultBean) {
								hideProgressDialog();
								if (resultBean.getResultCode() == 2222) {
									mHandler.sendEmptyMessage(2222);
								} else {
									showToast(resultBean.getMsg());
								}
							}

							@Override
							public void onFailure(String e) {
								hideProgressDialog();
								showToast(Constants.NET_WRONG);
							}
						});
				// mSendurl.httpRequestWithParams(requestMap, url, method,
				// httpCallBack);
			}
		});
	}

	// 对键盘的操作
	@Bean
	KeyboardComponent keyboardComponent;

	/**
	 * 打开软键盘
	 */
	private void openKeyboard() {
		Timer timer = new Timer();
		timer.schedule(new TimerTask() {
			public void run() {
				keyboardComponent.openKeybord(etMoney);
			}
		}, 500);
	}

	/**
	 * 关闭软键盘
	 */
	private void closeKeyBoard() {
		keyboardComponent.closeKeyboard(etMoney);
	}

	/**
	 * 返回
	 */
	@Click(R.id.iv_back)
	void back() {
		finish();
	}

	private ProgressDialog mProDialog;

	private void showProgressDialog() {
		if (null == mProDialog) {
			mProDialog = ProgressDialog.show(mContext, null, "loading");
		} else {
			mProDialog.show();
		}
	}

	private void hideProgressDialog() {
		runOnUiThread(new Runnable() {
			@Override
			public void run() {
				if (null != mProDialog) {
					mProDialog.hide();
				}
			}
		});
	}

	private void showToast(final String message) {
		runOnUiThread(new Runnable() {
			@Override
			public void run() {
				ToastUtil.showToast(message);
			}
		});
	}
}
