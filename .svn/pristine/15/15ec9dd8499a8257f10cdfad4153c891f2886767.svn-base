/**
 * 
 */
package cn.sx.decentworld.service;

import java.util.Collection;

import org.apache.commons.lang.StringUtils;
import org.jivesoftware.smack.PacketCollector;
import org.jivesoftware.smack.XMPPConnection;
import org.jivesoftware.smack.XMPPException;

import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.os.IBinder;
import cn.sx.decentworld.DecentWorldApp;
import cn.sx.decentworld.task.CollectorThreadStarter;
import cn.sx.decentworld.utils.LogUtils;
import cn.sx.decentworld.utils.LoginHelper;
import cn.sx.decentworld.utils.XmppHelper;

/**
 * @ClassName: PackageListenerService.java
 * @Description:消息监听服务
 * @author: cj
 * @date: 2015年9月22日 下午4:05:47
 */
public class PacketListenerService extends Service {
	public static final String TAG = "PacketListenerService";
	private static final PacketListenerService instance = new PacketListenerService();

	@Override
	public IBinder onBind(Intent intent) {
		return null;
	}

	@Override
	public void onCreate() {
		super.onCreate();
		LogUtils.i(TAG, "onCreate");
		
		if(!XmppHelper.isNewCon()){
			XMPPConnection conn=XmppHelper.getConnection(null);
			Collection<PacketCollector> collectors = conn.getPacketCollectors();
			Context context = DecentWorldApp.getGlobalContext();
			for (PacketCollector packetCollector : collectors) {
				new CollectorThreadStarter(packetCollector, context).start();
			}
		}else{
			if(LoginHelper.isLogined(DecentWorldApp.getGlobalContext())){
				String dwID=DecentWorldApp.getInstance().getDwID();
				String username=DecentWorldApp.getInstance().getUserName();
				String password=DecentWorldApp.getInstance().getPassword();
				new LoginThread(username, dwID, password, "Smack").start();
			}			
		}
		new Thread(new Runnable() {
			
			@Override
			public void run() {
				while(true){
//					LogUtils.i("living tag", "living---->");
					try {
						Thread.sleep(1000);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				}
			}
		}).start();
	}

	@Override
	public void onDestroy() {
		LogUtils.i(TAG, "关闭一个Packet监听的服务...onDestroy");
		super.onDestroy();
	}

	private static class LoginThread extends Thread{
		private XMPPConnection conn;
		private String username;
		private String dwID;
		private String password;
		private String resource;
		
		
		public LoginThread( String username, String dwID,
				String password, String resource) {
			super();
			this.username = username;
			this.dwID = dwID;
			this.password = password;
			this.resource = resource;
		}


		@Override
		public void run() {
			try {
				//connect
				conn = XmppHelper.getConnection(null);								
				conn.login(username, dwID, password, resource);
				XmppHelper.setIsNewCon(false);			
				Collection<PacketCollector> collectors = conn.getPacketCollectors();
				Context context = DecentWorldApp.getGlobalContext();
				for (PacketCollector packetCollector : collectors) {
					new CollectorThreadStarter(packetCollector, context).start();
				}
			} catch (XMPPException e) {
			}
		}
	}
}
