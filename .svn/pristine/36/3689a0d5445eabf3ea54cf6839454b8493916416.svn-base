/**
 * 
 */
package cn.sx.decentworld.fragment;

import java.util.ArrayList;
import java.util.List;

import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.os.Bundle;
import android.support.v4.app.Fragment;
import android.support.v4.view.PagerAdapter;
import android.support.v4.view.ViewPager;
import android.support.v4.view.ViewPager.OnPageChangeListener;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnLongClickListener;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.ImageView.ScaleType;
import android.widget.LinearLayout;
import cn.sx.decentworld.DecentWorldApp;
import cn.sx.decentworld.R;
import cn.sx.decentworld.common.Constants;
import cn.sx.decentworld.dialog.DialogDeletePicFragment;
import cn.sx.decentworld.dialog.DialogDeletePicFragment.OnDeleteClickListener;
import cn.sx.decentworld.utils.ImageUtils;
import cn.sx.decentworld.utils.LogUtils;

/**
 * @ClassName: ViewPagerFragment.java
 * @Description:
 * @author: yj
 * @date: 2016年1月12日 下午3:44:55
 */
public class ViewPagerFragment extends Fragment implements OnLongClickListener {
	private LinearLayout llDots;
	private ViewPager vpShowPic;
	private List<String> mPicPaths;
	private List<Bitmap> bitmaps;
	private List<ImageView> imageViews;
	private List<View> dots;
	private int currentItem = 0; // 当前图片的索引号
	private ChoosePicPageAdapter adapter;

	@Override
	public View onCreateView(LayoutInflater inflater, ViewGroup container,
			Bundle savedInstanceState) {
		return inflater.inflate(R.layout.fragment_viewpager, null);
	}

	@Override
	public void onActivityCreated(Bundle savedInstanceState) {
		super.onActivityCreated(savedInstanceState);
		initView();
	}

	private void initView() {
		llDots = (LinearLayout) getView().findViewById(R.id.ll_dots);
		vpShowPic = (ViewPager) getView().findViewById(R.id.vp_pic);
		bitmaps = new ArrayList<Bitmap>();
		imageViews = new ArrayList<ImageView>();
		dots = new ArrayList<View>();
		adapter = new ChoosePicPageAdapter();
		vpShowPic.setAdapter(adapter);
		vpShowPic.setOnPageChangeListener(new CustomPageChangeListener());
	}

	public View createDot() {
		LinearLayout.LayoutParams lp = new LinearLayout.LayoutParams(10, 10);
		lp.setMargins(10, 0, 10, 0);
		View view = new View(getActivity());
		view.setLayoutParams(lp);
		view.setBackgroundResource(R.drawable.dot_normal);
		return view;
	}

	public void setPicPaths(List<String> picPaths) {
		mPicPaths = picPaths;
		if (null == mPicPaths) {
			return;
		}
		// 用来判断还剩下几张可以选择
		DecentWorldApp.mPicList.addAll(mPicPaths);
		for (int i = 0; i < mPicPaths.size(); i++) {
			String picPath = mPicPaths.get(i);
			int fileLength = ImageUtils.fileLength(picPath);
			LogUtils.i("bm", "fileLength--" + fileLength);
			Bitmap bitmap = getBitmap(picPath, fileLength);
			bitmaps.add(bitmap);
			addImageView(bitmap);
			addDot();
			adapter.notifyDataSetChanged();
		}
	}

	private void addImageView(Bitmap bitmap) {
		ImageView imageView = new ImageView(getActivity());
		imageView.setImageBitmap(bitmap);
		imageView.setScaleType(ScaleType.CENTER_CROP);
		imageView.setOnLongClickListener(this);
		imageViews.add(imageView);
	}

	private void addDot() {
		View dot = createDot();
		llDots.addView(dot);
		dots.add(dot);
	}

	/**
	 * 获取bitmap，超过2M，进行缩小
	 * */
	private Bitmap getBitmap(String picPath, int fileLength) {
		Bitmap bitmap;
		if (fileLength > 1024 * 1024 * 1.5) {
			bitmap = ImageUtils.scalePic(picPath);
		} else {
			bitmap = BitmapFactory.decodeFile(picPath);
		}
		return bitmap;
	}

	/**
	 * 填充ViewPager页面的适配器
	 * 
	 */
	private class ChoosePicPageAdapter extends PagerAdapter {

		@Override
		public int getCount() {
			LogUtils.i("bm", "getCount=" + bitmaps.size());
			return bitmaps.size();
		}

		@Override
		public Object instantiateItem(View arg0, int arg1) {
			LogUtils.i("bm", "instantiateItem=" + arg1);
			ImageView imageView = imageViews.get(arg1);
			((ViewPager) arg0).addView(imageView);
			return imageView;
		}

		@Override
		public void destroyItem(View arg0, int arg1, Object arg2) {
			LogUtils.i("bm", "destroyItem=" + arg2);
			((ViewPager) arg0).removeView((View) arg2);
		}

		@Override
		public boolean isViewFromObject(View arg0, Object arg1) {
			return arg0 == arg1;
		}

		@Override
		public void finishUpdate(ViewGroup container) {
			super.finishUpdate(container);
			setCurrentDot();
		}

		@Override
		public int getItemPosition(Object object) {
			return POSITION_NONE;
		}

	}

	/**
	 * 当ViewPager中页面的状态发生改变时调用
	 */
	private class CustomPageChangeListener implements OnPageChangeListener {
		private int oldPosition = 0;

		public void onPageSelected(int position) {
			currentItem = position;
			if (dots.size() > oldPosition && dots.size() > position) {
				dots.get(oldPosition).setBackgroundResource(
						R.drawable.dot_normal);
				dots.get(position)
						.setBackgroundResource(R.drawable.dot_focused);
			}

			oldPosition = position;
		}

		public void onPageScrollStateChanged(int arg0) {

		}

		public void onPageScrolled(int arg0, float arg1, int arg2) {

		}
	}

	/**
	 * 设置默认的选中点
	 * */
	private void setCurrentDot() {
		if (bitmaps.size() > 0 && currentItem >= 0 && dots.size() > currentItem) {
			currentItem = vpShowPic.getCurrentItem();
			dots.get(currentItem).setBackgroundResource(R.drawable.dot_focused);
		}
	}

	@Override
	public boolean onLongClick(View v) {
		deleteAction();
		return true;
	}

	private DialogDeletePicFragment dp;

	private void deleteAction() {
		dp = DialogDeletePicFragment.newInstance("确定要删除这张图片？");
		dp.setOnDeleteClickListener(new OnDeleteClickListener() {

			@Override
			public void deleteClick(int state) {
				switch (state) {
				case Constants.ENSURE:
					int position = vpShowPic.getCurrentItem();
					if (DecentWorldApp.mPicList.size() > position) {
						DecentWorldApp.mPicList.remove(position);
					} else {
						DecentWorldApp.mPicList.remove(position - 1);
					}
					bitmaps.remove(position);
					imageViews.remove(position);
					dots.remove(position);
					llDots.removeViewAt(position);
					adapter.notifyDataSetChanged();
					break;
				case Constants.CANCEL:
					dp.dismiss();
					break;
				}
			}
		});
		dp.show(getActivity().getSupportFragmentManager(), "backDialogs");
	}
}
