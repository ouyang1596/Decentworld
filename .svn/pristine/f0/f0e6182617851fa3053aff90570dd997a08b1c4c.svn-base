/**
 * 
 */
package cn.sx.decentworld.network.request;

import java.util.HashMap;

import android.app.Activity;
import android.app.ProgressDialog;
import android.content.Context;
import android.os.Handler;
import android.os.Message;
import cn.sx.decentworld.activity.RecommendActivity;
import cn.sx.decentworld.common.Constants;
import cn.sx.decentworld.component.ToastComponent;
import cn.sx.decentworld.network.SendUrl;
import cn.sx.decentworld.network.SendUrl.HttpCallBack;
import cn.sx.decentworld.network.entity.ResultBean;
import cn.sx.decentworld.utils.LogUtils;
import cn.sx.decentworld.utils.SPUtils;
import cn.sx.decentworld.utils.ToastUtils;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.android.volley.Request.Method;
import com.googlecode.androidannotations.annotations.AfterViews;
import com.googlecode.androidannotations.annotations.Bean;
import com.googlecode.androidannotations.annotations.EBean;
import com.googlecode.androidannotations.annotations.RootContext;

/**
 * @ClassName: GetUserInfo.java
 * @Description: 1.根据我方服务器的id，获取用户信息（升级版/33项信息） 2.获取用户身价 3.获取用户身家
 *               4.获取用户的主头像（有待完善、IP为阿里时获取不了） 5.同时获取用户的额外三张图片 6.根据电话号码获取用户的dwID
 *               7.获取用户在我的界面要显示的信息 8.获取用户信息的对外显示权限 9.获取我是谁的贵人的列表 10.获得贵人总收益
 *               11.验证即将被推荐的人是否有效 12.验证即将被担保的人是否有效 13.获取单聊聊天记录
 * 
 *               1.根据电话号码获取用户的dwID 2.获取身家 3.获取身价 4.根据dwID获取用户信息 5.
 * 
 * @author: cj
 * @date: 2015年9月25日 上午10:30:41
 */
@EBean
public class GetUserInfo {
	private static String TAG = "GetUserInfo";
	@RootContext
	Context context;
	@RootContext
	Activity activity;
	@Bean
	ToastComponent toast;
	private SendUrl sendUrl;
	private ProgressDialog mProDialog;

	@AfterViews
	void init() {
		sendUrl = new SendUrl(context);
	}

	/**
	 * 弹出提示信息
	 * 
	 * @param bean
	 */
	private void showToastInfo(final String toastInfo) {
		activity.runOnUiThread(new Runnable() {
			@Override
			public void run() {
				toast.show(toastInfo);
			}
		});
	}

	/**
	 * 根据电话号码获取用户的dwID【完成】
	 * 
	 * @param phoneNum
	 */
	public void getUserdwID(final String phoneNum, final Handler handler) {
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("phoneNum", phoneNum);
		LogUtils.i(TAG, "getUserdwID...begin,phoneNum=" + phoneNum);
		showProgressDialog();
		sendUrl.httpRequestWithParams(map, Constants.CONTEXTPATH
				+ Constants.API_GET_USERID, Method.POST, new HttpCallBack() {
			@Override
			public void onSuccess(String response, final ResultBean bean) {
				hideProgressDialog();
				LogUtils.i(TAG,
						"getUserdwID...getResultCode=" + bean.getResultCode()
								+ ",getData=" + bean.getData() + ",getMsg="
								+ bean.getMsg());
				if (bean.getResultCode() == 2222) {
					// 获取成功，返回 dwID,token
					Message message = handler.obtainMessage();
					message.what = bean.getResultCode();
					message.obj = bean.getData().toString();
					handler.sendMessage(message);
				} else if (bean.getResultCode() == 2010) {
					Message message = handler.obtainMessage();
					message.what = bean.getResultCode();
					message.obj = bean.getData().toString();
					handler.sendMessage(message);
				} else if (bean.getResultCode() == 2011) {
					Message message = handler.obtainMessage();
					message.what = bean.getResultCode();
					message.obj = bean.getData().toString();
					handler.sendMessage(message);
				} else if (bean.getResultCode() == 3333) {
					showToastInfo(bean.getMsg());
				}
			}

			@Override
			public void onFailure(String e) {
				hideProgressDialog();
				LogUtils.i(TAG, "getUserdwID ...onFailure,cause by:" + e);
				showToastInfo(Constants.NET_WRONG);
			}
		});
	}

	/**
	 * 获取用户身家【完成】
	 * 
	 * @param dwID
	 *            用户id
	 * @param handler
	 *            回调handler
	 * @param resultCode
	 *            回调中msg.what 的值
	 */
	public void getWealth(String dwID, final Handler handler,
			final int resultCode) {
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("dwID", dwID);
		LogUtils.i(TAG, "getWealth...begin，dwID=" + dwID);
		sendUrl.httpRequestWithParams(map, Constants.CONTEXTPATH
				+ "/user/getWealth", Method.GET, new HttpCallBack() {
			@Override
			public void onSuccess(String response, ResultBean bean) {
				LogUtils.i(TAG,
						"getWealth...getResultCode=" + bean.getResultCode()
								+ ",getData=" + bean.getData() + ",getMsg="
								+ bean.getMsg());
				if (bean.getResultCode() == 2222) {
					JSONObject json = JSON.parseObject(bean.getData()
							.toString());
					Message message = Message.obtain();
					message.obj = json.getString("wealth");
					message.what = resultCode;
					handler.sendMessage(message);
					LogUtils.i(TAG, "getWealth...success");
				}
				if (bean.getResultCode() == 3333) {
					LogUtils.i(TAG,
							"getWealth...failure,cause by:" + bean.getMsg());
				}
			}

			@Override
			public void onFailure(String error) {
				LogUtils.i(TAG, "getWealth...onFailure,cause by:" + error);
			}
		});
	}

	/**
	 * 获取用户身价【完成】
	 * 
	 * @param dwID
	 *            用户id
	 * @param handler
	 *            回调handler
	 * @param resultCode
	 *            回调中msg.what 的值
	 */
	public void getWorth(String dwID, final Handler handler,
			final int resultCode) {
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("dwID", dwID);
		LogUtils.i(TAG, "getWorth...begin,dwID" + dwID);
		sendUrl.httpRequestWithParams(map, Constants.CONTEXTPATH
				+ "/user/getWorth", Method.GET, new HttpCallBack() {
			@Override
			public void onSuccess(String response, ResultBean bean) {
				LogUtils.i(TAG,
						"getWorth...getResultCode=" + bean.getResultCode()
								+ ",getData=" + bean.getData() + ",getMsg="
								+ bean.getMsg());
				if (bean.getResultCode() == 2222) {
					JSONObject json = JSON.parseObject(bean.getData()
							.toString());
					Message message = Message.obtain();
					message.obj = json.getString("worth");
					message.what = resultCode;
					handler.sendMessage(message);
					LogUtils.i(TAG, "getWorth...success");
				}

				if (bean.getResultCode() == 3333) {
					LogUtils.i(TAG,
							"getWorth...failure,cause by:" + bean.getMsg());
				}
			}

			@Override
			public void onFailure(String error) {
				LogUtils.i(TAG, "getWorth...onFailure,cause by:" + error);
			}
		});
	}

	/**
	 * 根据dwID获取用户信息【完成】
	 * 
	 * @param dwID
	 */
	public void getUserInfo(final String dwID, final Handler handler,
			final int requestCode) {
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("dwID", dwID);
		LogUtils.i(TAG, "getUserInfo...begin，dwID= " + dwID);
		sendUrl.httpRequestWithParams(map, Constants.CONTEXTPATH
				+ "/user/retrieveInfo", Method.GET, new HttpCallBack() {
			@Override
			public void onSuccess(String response, ResultBean bean) {
				LogUtils.i(
						TAG,
						"getUserInfo...msg.getResultCode="
								+ bean.getResultCode() + ",getData="
								+ bean.getData() + ",msg.getMsg="
								+ bean.getMsg());
				if (bean.getResultCode() == 2222)// 获取成功
				{
					Message message = Message.obtain();
					message.what = requestCode;
					message.arg1 = 1;
					message.obj = bean.getData().toString();
					handler.sendMessage(message);
				}
				if (bean.getResultCode() == 3333) {
					LogUtils.i(TAG,
							"getUserInfo...failure,cause by:" + bean.getMsg());
					Message message = Message.obtain();
					message.what = requestCode;
					message.arg1 = 0;
					handler.sendMessage(message);
				}
			}

			@Override
			public void onFailure(String error) {
				ToastUtils.toast(context, Constants.NET_WRONG);
				LogUtils.i(TAG, "getUserInfo...onFailure,cause by:" + error);
				Message message = Message.obtain();
				message.what = requestCode;
				message.arg1 = 0;
				handler.sendMessage(message);
			}
		});
	}

	/**
	 * 获取用户信息的对外显示权限【完成】
	 * 
	 * @param dwID
	 * @param handler
	 * @param requestCode
	 */
	public void getUserInfoAuth(final String dwID, final Handler handler,
			final int requestCode) {
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("dwID", dwID);
		LogUtils.i(TAG, "getUserInfoAuth...begin，dwID= " + dwID);
		sendUrl.httpRequestWithParams(map, Constants.CONTEXTPATH
				+ "/user/getUserAuth", Method.GET, new HttpCallBack() {
			@Override
			public void onSuccess(String response, ResultBean msg) {
				LogUtils.i(
						TAG,
						"getUserInfoAuth...msg.getResultCode="
								+ msg.getResultCode() + ",msg.getMsg="
								+ msg.getMsg());
				if (msg.getResultCode() == 2222)// 获取成功
				{
					Message message = Message.obtain();
					message.what = requestCode;
					message.arg1 = 1;
					message.obj = msg.getData().toString();
					handler.sendMessage(message);
				}
				if (msg.getResultCode() == 3333) {
					LogUtils.i(
							TAG,
							"getUserInfoAuth...failure,cause by:"
									+ msg.getMsg());
					Message message = Message.obtain();
					message.what = requestCode;
					message.arg1 = 0;
					handler.sendMessage(message);
				}
			}

			@Override
			public void onFailure(String error) {
				LogUtils.i(TAG, "getUserInfoAuth...failure,cause by:" + error);
				Message message = Message.obtain();
				message.what = requestCode;
				message.arg1 = 0;
				handler.sendMessage(message);
			}
		});
	}

	/**
	 * 获取我是谁的贵人的列表【完成】
	 * 
	 * @param dwID
	 * @param handler
	 * @param requestCode
	 */
	public void getMyProteges(final String dwID, final Handler handler,
			final int requestCode) {
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("dwID", dwID);
		LogUtils.i(TAG, "getMyProteges...begin，dwID= " + dwID);
		sendUrl.httpRequestWithParams(map, Constants.CONTEXTPATH
				+ "/user/getMyProteges", Method.GET, new HttpCallBack() {
			@Override
			public void onSuccess(String response, ResultBean msg) {
				LogUtils.i(
						TAG,
						"getMyProteges...msg.getResultCode="
								+ msg.getResultCode() + ",msg.getMsg="
								+ msg.getMsg() + ",msg.getData="
								+ msg.getData().toString());
				if (msg.getResultCode() == 2222)// 获取成功
				{
					LogUtils.i(TAG, "getMyProteges...我是 " + msg.getMsg()
							+ " 个人的贵人。");
					Message message = Message.obtain();
					message.what = requestCode;
					message.obj = msg.getData().toString();
					handler.sendMessage(message);
				}
				if (msg.getResultCode() == 3333) {
					LogUtils.i(TAG,
							"getMyProteges...failure,cause by:" + msg.getMsg());
				}
			}

			@Override
			public void onFailure(String error) {
				LogUtils.i(TAG, "getMyProteges...onFailure,cause by:" + error);
			}
		});
	}

	/**
	 * 获得贵人总收益【完成】
	 * 
	 * @param dwID
	 * @param handler
	 * @param requestCode
	 */
	public void getGrAllBenefit(final String dwID, final Handler handler,
			final int requestCode) {
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("dwID", dwID);
		LogUtils.i(TAG, "getGrAllBenefit...begin，dwID= " + dwID);
		sendUrl.httpRequestWithParams(map, Constants.CONTEXTPATH
				+ "/history/getMyGRBenefit", Method.GET, new HttpCallBack() {
			@Override
			public void onSuccess(String response, ResultBean msg) {
				LogUtils.i(
						TAG,
						"getGrAllBenefit...msg.getResultCode="
								+ msg.getResultCode() + ",msg.getMsg="
								+ msg.getMsg());
				if (msg.getResultCode() == 2222)// 获取成功
				{
					LogUtils.i(TAG, "getGrAllBenefit...获取作为别人的贵人获取的总收益为： "
							+ msg.getData());
					Message message = Message.obtain();
					message.what = requestCode;
					message.obj = msg.getData().toString();
					handler.sendMessage(message);
				}
				if (msg.getResultCode() == 3333) {
					LogUtils.i(
							TAG,
							"getGrAllBenefit...failure,cause by:"
									+ msg.getMsg());
				}
			}

			@Override
			public void onFailure(String error) {
				LogUtils.i(TAG, "getGrAllBenefit...onFailure,cause by:" + error);
			}
		});
	}

	/**
	 * 点击查看 我是谁的贵人的列表详情
	 * 
	 * @param dwID
	 *            明细人ID（对方）
	 * @param grID
	 *            贵人ID（自己）
	 * @param handler
	 * @param requestCode
	 */
	public void getGRBenefitHistory(final String grID, String dwID,
			final Handler handler, final int requestCode) {
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("grID", grID);
		map.put("dwID", dwID);
		LogUtils.i(TAG, "getGRBenefitHistory...begin，自己的ID= " + grID
				+ ",明细人的ID=" + dwID);
		sendUrl.httpRequestWithParams(map, Constants.CONTEXTPATH
				+ "/history/getGRBenefitHistory", Method.GET,
				new HttpCallBack() {
					@Override
					public void onSuccess(String response, ResultBean msg) {
						LogUtils.i(TAG,
								"getGRBenefitHistory...msg.getResultCode="
										+ msg.getResultCode() + ",msg.getMsg="
										+ msg.getMsg());
						if (msg.getResultCode() == 2222)// 获取成功
						{
							LogUtils.i(TAG, "getGRBenefitHistory...获取的详情为："
									+ msg.getData());
							Message message = Message.obtain();
							message.what = requestCode;
							message.obj = msg.getData().toString();
							handler.sendMessage(message);
						}
						if (msg.getResultCode() == 3333) {
							LogUtils.i(TAG,
									"getGRBenefitHistory...failure,cause by:"
											+ msg.getMsg());
						}
					}

					@Override
					public void onFailure(String error) {
						LogUtils.i(TAG,
								"getGRBenefitHistory...onFailure,cause by:"
										+ error);
					}
				});
	}

	/**
	 * 验证即将被推荐的人是否有效【完成】
	 * 
	 * @param phoneNum
	 * @param handler
	 * @param requestCode
	 */
	public void validateRecommend(String dwID, String phoneNum,
			final Handler handler) {
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("dwID", dwID);
		map.put("phoneNum", phoneNum);
		LogUtils.i(TAG, "validateRecommend...begin");
		sendUrl.httpRequestWithParams(map, Constants.CONTEXTPATH
				+ "/user/validateRecommend", Method.GET, new HttpCallBack() {
			@Override
			public void onSuccess(String response, ResultBean msg) {
				LogUtils.i(
						TAG,
						"validateRecommend...msg.getResultCode="
								+ msg.getResultCode());
				if (msg.getResultCode() == 2001)// 被推荐人已经注册
				{
					LogUtils.i(TAG,
							"validateRecommend...msg.getMsg=" + msg.getMsg());
					ToastUtils.toast(context, "被推荐人已经注册");
				} else if (msg.getResultCode() == 2009)// 已被他人推荐
				{
					LogUtils.i(TAG,
							"validateRecommend...msg.getMsg=" + msg.getMsg());
					ToastUtils.toast(context, "已被他人推荐");
				} else if (msg.getResultCode() == 2222) {
					LogUtils.i(TAG, "validateRecommend...success,推荐的人有效");
					handler.sendEmptyMessage(2222);
				} else if (msg.getResultCode() == 3333) {
					LogUtils.i(TAG,
							"validateRecommend...msg.getMsg=" + msg.getMsg());
					handler.sendEmptyMessage(3333);
				}
			}

			@Override
			public void onFailure(String e) {
				LogUtils.i(TAG, "validateRecommend...onFailure,caused by:" + e);
				ToastUtils.toast(context, Constants.NET_WRONG);
			}
		});
	}

	/**
	 * 验证即将被担保的人是否有效【无需求，接口废弃】
	 * 
	 * @param phoneNum
	 * @param handler
	 * @param requestCode
	 */
	public void validateGuarantee(String phoneNum, final Handler handler,
			final int requestCode) {
		// HashMap<String, String> map = new HashMap<String, String>();
		// map.put("phoneNum", phoneNum);
		// LogUtils.i(TAG, "validateGuarantee...begin");
		// sendUrl.httpRequestWithParams(map, Constants.CONTEXTPATH +
		// "/set/checkGuarantee", Method.GET, new HttpCallBack()
		// {
		// @Override
		// public void onSuccess(String response, ResultBean msg)
		// {
		// LogUtils.i(TAG, "validateGuarantee...msg.getResultCode=" +
		// msg.getResultCode());
		// if (msg.getResultCode() == 3001)// 被担保人已经注册
		// {
		// LogUtils.i(TAG, "validateGuarantee...msg.getMsg=" + msg.getMsg());
		// ToastUtils.toast(context, "被担保人已经注册");
		// }
		// else if (msg.getResultCode() == 3333)// 已被他人担保
		// {
		// LogUtils.i(TAG, "validateGuarantee...msg.getMsg=" + msg.getMsg());
		// ToastUtils.toast(context, "已被他人担保");
		// }
		// else if (msg.getResultCode() == 2222)
		// {
		// LogUtils.i(TAG, "validateGuarantee...success,担保的人有效");
		// handler.sendEmptyMessage(requestCode);
		// }
		// }
		//
		// @Override
		// public void onFailure(String e)
		// {
		// LogUtils.i(TAG, "validateGuarantee...onFailure,caused by:" + e);
		// ToastUtils.toast(context, Constants.NET_WRONG);
		// }
		// });
	}

	/**
	 * 获取单聊聊天记录
	 * 
	 * @param dwID
	 *            自己的ID
	 * @param toID
	 *            对方的ID
	 * @param page
	 *            消息开始的位置
	 * @param handler
	 *            回调Handler
	 * @param requestCode
	 *            请求码
	 */
	public void getUserHistoryMsg(String dwID, String toID, long firstIndex,
			int chatType, final Handler handler) {
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("dwID", dwID);
		map.put("toID", toID);
		map.put("firstIndex", String.valueOf(firstIndex));
		map.put("chatType", String.valueOf(chatType));
		LogUtils.i(TAG, "getUserHistoryMsg...begin,dwID=" + dwID + ",toID="
				+ toID + ",firstIndex=" + firstIndex + ",chatType=" + chatType);
		sendUrl.httpRequestWithParams(map, Constants.CONTEXTPATH
				+ "/chatHistory/getSingleChatHistory", Method.POST,
				new HttpCallBack() {
					@Override
					public void onSuccess(String response, ResultBean msg) {
						LogUtils.i(
								TAG,
								"getUserHistoryMsg...msg.getResultCode="
										+ msg.getResultCode() + "\nmsg.getMsg="
										+ msg.getMsg() + "\nmsg.getData="
										+ msg.getData());
						if (msg.getResultCode() == 2222) {
							Message message = Message.obtain();
							message.what = 1;
							message.obj = msg.getData().toString();
							handler.sendMessage(message);
						}
						if (msg.getResultCode() == 3333) {
							LogUtils.i(TAG,
									"getUserHistoryMsg...onfailure,cause by:"
											+ msg.getMsg());
							Message message = Message.obtain();
							message.obj = msg.getMsg();
							message.what = 2;
							handler.sendMessage(message);
						}
					}

					@Override
					public void onFailure(String e) {
						LogUtils.i(TAG,
								"getUserHistoryMsg...onFailure,cause by:" + e);
						Message message = Message.obtain();
						message.obj = "网络错误";
						message.what = 3;
						handler.sendMessage(message);
					}
				});
	}

	private void showProgressDialog() {
		activity.runOnUiThread(new Runnable() {
			@Override
			public void run() {
				if (null == mProDialog) {
					mProDialog = ProgressDialog.show(context, null, "loading");
				} else {
					mProDialog.show();
				}
			}
		});
	}

	private void hideProgressDialog() {
		activity.runOnUiThread(new Runnable() {
			@Override
			public void run() {
				if (null != mProDialog) {
					mProDialog.dismiss();
				}
			}
		});
	}

	/**
	 * 获取添加朋友的历史记录列表
	 * 
	 * @param userID
	 *            自己的dwID
	 * @param handler
	 *            回调Handler
	 * @param requestCode
	 *            请求码
	 */
	public void getAddNewFriendHistory(String userID, final Handler handler,
			final int requestCode) {
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("dwID", userID);
		LogUtils.i(TAG, "getAddNewFriendHistory...begin,userID=" + userID);
		sendUrl.httpRequestWithParams(map, Constants.CONTEXTPATH
				+ "/friend/getFriendStatus", Method.GET, new HttpCallBack() {
			@Override
			public void onSuccess(String response, ResultBean msg) {
				LogUtils.i(TAG, "getAddNewFriendHistory...msg.getResultCode="
						+ msg.getResultCode() + "\nmsg.getMsg=" + msg.getMsg()
						+ "\nmsg.getData=" + msg.getData());
				if (msg.getResultCode() == 2222) {
					LogUtils.i(TAG, "getAddNewFriendHistory...success");
					Message message = Message.obtain();
					message.obj = msg.getData().toString();
					message.what = requestCode;
					handler.sendMessage(message);
				} else if (msg.getResultCode() == 3333) {
					// 数据为空，直接给用户提示
					LogUtils.i(
							TAG,
							"getAddNewFriendHistory...failure,cause by:"
									+ msg.getMsg());
					ToastUtils.toast(context, msg.getMsg());
				}
			}

			@Override
			public void onFailure(String e) {
				LogUtils.i(TAG, "getAddNewFriendHistory...onFailure,cause by:"
						+ e);
				ToastUtils.toast(context, Constants.NET_WRONG);
			}
		});
	}

	/**
	 * 推荐别人获得的收益列表
	 * 
	 * @param userID
	 *            自己ID
	 * @param handler
	 * @param requestCode
	 */
	public void getRecommendBenefitList(String userID, final Handler handler,
			final int requestCode) {
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("dwID", userID);
		LogUtils.i(TAG, "getRecommendBenefitList...begin,dwID=" + userID);
		sendUrl.httpRequestWithParams(map, Constants.CONTEXTPATH
				+ "/user/getRecommendList", Method.GET, new HttpCallBack() {
			@Override
			public void onSuccess(String response, ResultBean msg) {
				LogUtils.i(
						TAG,
						"getRecommendBenefitList...begin,msg.getResultCode="
								+ msg.getResultCode() + ",msg.getMsg="
								+ msg.getMsg() + ",msg.getData="
								+ msg.getData());
				if (msg.getResultCode() == 2222) {
					/**
					 * ResultBean [resultCode=2222, msg=,
					 * data=[{"amount":"30.0",
					 * "benefit":"0.0","dwID":"282102","isRegister"
					 * :"1","name":"测试推荐"
					 * ,"status":"1"},{"amount":"","benefit":""
					 * ,"dwID":"","isRegister"
					 * :"0","name":"13713132653","status":
					 * ""},{"amount":"","benefit"
					 * :"","dwID":"","isRegister":"0","name"
					 * :"13925738211","status"
					 * :""},{"amount":"","benefit":"","dwID"
					 * :"","isRegister":"0",
					 * "name":"13713132657","status":""},{"amount"
					 * :"30.0","benefit"
					 * :"1.0","dwID":"689857","isRegister":"1","name"
					 * :"测试推荐2","status":"1"}]]
					 */
					LogUtils.i(TAG, "getRecommendBenefitList...success");
					Message message = Message.obtain();
					message.what = requestCode;
					message.obj = msg.getData().toString();
					handler.sendMessage(message);
				}

				if (msg.getResultCode() == 3333) {
					LogUtils.i(TAG, "getRecommendBenefitList...failure");
					ToastUtils.toast(context, msg.getMsg());
				}
			}

			@Override
			public void onFailure(String e) {
				LogUtils.i(TAG, "getRecommendBenefitList...onFailure");
				ToastUtils.toast(context, Constants.NET_WRONG);
			}
		});
	}

	/**
	 * 推荐别人获得的收益列表详情
	 * 
	 * @param userID
	 *            自己的ID
	 * @param otherID
	 *            被推荐人ID
	 * @param handler
	 * @param requestCode
	 */
	public void getRecommendBenefitDetail(String userID, String otherID,
			final Handler handler, final int requestCode) {
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("dwID", userID);
		map.put("recommenderedID", otherID);
		LogUtils.i(TAG, "getRecommendBenefitDetail...begin,dwID=" + userID
				+ ",otherID=" + otherID);
		sendUrl.httpRequestWithParams(map, Constants.CONTEXTPATH
				+ "/user/getRecommendDetails", Method.GET, new HttpCallBack() {
			@Override
			public void onSuccess(String response, ResultBean msg) {
				LogUtils.i(
						TAG,
						"getRecommendBenefitDetail...success,msg.getResultCode="
								+ msg.getResultCode() + ",msg.getMsg="
								+ msg.getMsg() + ",msg.getData="
								+ msg.getData());
				if (msg.getResultCode() == 2222) {
					// list 包含key为 amount,time,status
					LogUtils.i(TAG, "getRecommendBenefitDetail...success");
					Message message = Message.obtain();
					message.what = requestCode;
					message.obj = msg.getData().toString();
					handler.sendMessage(message);
				}

				if (msg.getResultCode() == 3333) {
					LogUtils.i(TAG, "getRecommendBenefitDetail...failure");
					ToastUtils.toast(context, msg.getMsg());
				}
			}

			@Override
			public void onFailure(String e) {
				LogUtils.i(TAG, "getRecommendBenefitDetail...onFailure");
				ToastUtils.toast(context, Constants.NET_WRONG);
			}
		});
	}

	/**
	 * 获取用户的账号
	 * 
	 * @param dwID
	 * @param handler
	 * @param requestCod
	 */
	public void getUserAccount(String dwID, final Handler handler,
			final int requestCode) {
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("dwID", dwID);
		LogUtils.i(TAG, "getUserAccount...begin,dwID" + dwID);
		sendUrl.httpRequestWithParams(map, Constants.CONTEXTPATH
				+ "/user/getAccountInfo", Method.GET, new HttpCallBack() {
			@Override
			public void onSuccess(String response, ResultBean msg) {
				LogUtils.i(
						TAG,
						"getUserAccount...msg.getResultCode="
								+ msg.getResultCode() + ",msg.getMsg="
								+ msg.getMsg() + ",msg.getData="
								+ msg.getData());
				if (msg.getResultCode() == 2222) {
					LogUtils.i(TAG, "getUserAccount...success");
					Message message = Message.obtain();
					message.what = requestCode;
					message.obj = msg.getData().toString();
					handler.sendMessage(message);
				} else if (msg.getResultCode() == 3333) {
					LogUtils.i(TAG,
							"getUserAccount...failure,cause by:" + msg.getMsg());
					ToastUtils.toast(context, msg.getMsg());
					Message message = Message.obtain();
					message.what = requestCode + 1;
					handler.sendMessage(message);
				}
			}

			@Override
			public void onFailure(String e) {
				LogUtils.i(TAG, "getUserAccount...onFailure,cause by:" + e);
				ToastUtils.toast(context, Constants.NET_WRONG);
			}
		});

	}

	/**
	 * 上传联系人列表到服务器
	 * 
	 * @param dwID
	 * @param handler
	 * @param requestCod
	 */
	public void uploadContact(HashMap<String, String> map, final Handler handle) {
		sendUrl.httpRequestWithParams(map, Constants.CONTEXTPATH
				+ Constants.UPLOAD_CONTACT, Method.GET, new HttpCallBack() {
			@Override
			public void onSuccess(String response, ResultBean msg) {
				if (msg.getResultCode() == 2222) {
					LogUtils.i("bm", msg.getData().toString());
					Message message = handle.obtainMessage();
					message.obj = msg.getData().toString();
					handle.sendMessage(message);
					showToastInfo("succ");
				} else {
					// showToastInfo("failure");
				}
			}

			@Override
			public void onFailure(String e) {
				LogUtils.i(TAG, "getUserAccount...onFailure,cause by:" + e);
				showToastInfo(Constants.NET_WRONG);
			}
		});
	}

	/**
	 * 获得公匙
	 * 
	 * @param userID
	 */
	public void getKey(String userID, final Handler handler,
			final int requestCode) {
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("dwID", userID);
		LogUtils.i(TAG, "getKey...begin,userID=" + userID);
		sendUrl.httpRequestWithParams(map, Constants.CONTEXTPATH
				+ "/security/getKey", Method.GET, new HttpCallBack() {
			@Override
			public void onSuccess(String response, ResultBean msg) {
				LogUtils.i(
						TAG,
						"getKey...begin,msg.getResultCode="
								+ msg.getResultCode() + ",msg.getMsg="
								+ msg.getMsg() + ",msg.getData="
								+ msg.getData());
				if (msg.getResultCode() == 2222) {
					JSONObject result = JSON.parseObject(msg.getData()
							.toString());
					String key = result.getString("key");
					/** 将结果返回 **/
					Message message = Message.obtain();
					message.what = requestCode;
					message.obj = key;
					handler.sendMessage(message);
				} else if (msg.getResultCode() == 3333) {
					LogUtils.i(TAG, "getKey...failure,cause by:" + msg.getMsg());
				} else {
					LogUtils.i(TAG, "getKey...failure,cause by:未知的返回码。");
				}
			}

			@Override
			public void onFailure(String e) {
				ToastUtils.toast(context, Constants.NET_WRONG);
			}
		});
	}

	/**
	 * 上传新的key到服务器
	 * 
	 * @param userID
	 * @param password
	 * @param newKey
	 */
	public void uploadKey(String userID, String password, String newKey,
			final String randomStr, final Handler handler, final int requestCode) {
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("dwID", userID);
		map.put("password", password);
		map.put("newKey", newKey);
		LogUtils.i(TAG, "uploadKey...begin,userID=" + userID + ",password="
				+ password + ",newKey=" + newKey);
		sendUrl.httpRequestWithParams(map, Constants.CONTEXTPATH
				+ "/security/uploadKey", Method.GET, new HttpCallBack() {
			@Override
			public void onSuccess(String response, ResultBean msg) {
				LogUtils.i(
						TAG,
						"uploadKey...begin,msg.getResultCode="
								+ msg.getResultCode() + ",msg.getMsg="
								+ msg.getMsg() + ",msg.getData="
								+ msg.getData());
				if (msg.getResultCode() == 2222) {
					LogUtils.i(TAG, "uploadKey...success");
					Message message = Message.obtain();
					message.what = requestCode;
					message.obj = randomStr;
					handler.sendMessage(message);
				} else if (msg.getResultCode() == 3333) {
					LogUtils.i(TAG,
							"uploadKey...failure,cause by:" + msg.getMsg());
				} else {
					LogUtils.i(TAG, "uploadKey...failure,cause by:未知的返回码");
				}

			}

			@Override
			public void onFailure(String e) {
				LogUtils.i(TAG, "uploadKey...onFailure,cause by:" + e);
				ToastUtils.toast(context, Constants.NET_WRONG);
			}
		});
	}

	/**
	 * 测试key是否有效
	 * 
	 * @param userID
	 *            用户ID
	 * @param token
	 *            加密后的字符串
	 * @param msg
	 *            加密前明文
	 */
	public void testKey(String userID, String token, String msg) {
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("dwID", userID);
		map.put("token", token);
		map.put("msg", msg);
		LogUtils.i(TAG, "testKey...begin,userID=" + userID + ",token=" + token
				+ ",msg=" + msg);
		sendUrl.httpRequestWithParams(map, Constants.CONTEXTPATH
				+ "/security/testKey", Method.GET, new HttpCallBack() {
			@Override
			public void onSuccess(String response, ResultBean msg) {
				LogUtils.i(
						TAG,
						"testKey...begin,msg.getResultCode="
								+ msg.getResultCode() + ",msg.getMsg="
								+ msg.getMsg() + ",msg.getData="
								+ msg.getData());
				if (msg.getResultCode() == 2222) {
					LogUtils.i(TAG, "testKey...success");
					ToastUtils.toast(context, "解析成功");
				} else if (msg.getResultCode() == 3333) {
					LogUtils.i(TAG,
							"testKey...failure,cause by:" + msg.getMsg());
					ToastUtils.toast(context, "解析失败");
				} else {
					LogUtils.i(TAG, "testKey...failure,cause by:未知的返回码");
				}

			}

			@Override
			public void onFailure(String e) {
				LogUtils.i(TAG, "testKey...onFailure,cause by:" + e);
				ToastUtils.toast(context, Constants.NET_WRONG);
			}
		});
	}
}
