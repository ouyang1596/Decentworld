/**
 * 
 */
package cn.sx.decentworld.task;

import java.io.File;

import org.jivesoftware.smack.packet.Message;
import org.simple.eventbus.EventBus;

import android.content.Context;
import cn.sx.decentworld.DecentWorldApp;
import cn.sx.decentworld.bean.DWMessage;
import cn.sx.decentworld.common.NotifyByEventBus;
import cn.sx.decentworld.engine.ConversationEngine;
import cn.sx.decentworld.entity.MsgAndInfo;
import cn.sx.decentworld.entity.UserSessionInfo;
import cn.sx.decentworld.entity.dao.ContactUserDao;
import cn.sx.decentworld.logSystem.LogUtils;
import cn.sx.decentworld.manager.MsgNotifyManager;
import cn.sx.decentworld.network.utils.JsonUtils;
import cn.sx.decentworld.utils.ImageUtils;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;

/**
 * @ClassName: ProcessPictureThread.java
 * @Description:
 * @author: cj
 * @date: 2015年11月28日 下午6:34:19
 */
public class ProcessPictureThread extends DWPacketHandler
{

    public static final String TAG = "ProcessPictureThread";

    public ProcessPictureThread(Message msg, Context context)
    {
        super(msg, context);
    }

    /**
	 * 
	 */
    public ProcessPictureThread()
    {

    }

    @Override
    public void run()
    {
        Message message = null;
        String s_msg = null;
        UserSessionInfo userSessionInfo;
        try
        {
            message = (Message) packet;
            LogUtils.v(TAG, "run() 收到到一条图片消息：" + message.toString());
            JSONObject jsonObject = JSON.parseObject(message.getBody());
            s_msg = jsonObject.getString("msg");
            String s_userSessionInfo = jsonObject.getString("userSessionInfo");
            userSessionInfo = (UserSessionInfo) JsonUtils.json2Bean(s_userSessionInfo, UserSessionInfo.class);
            /** 添加 FriendID **/
            JSONObject jsonObject2 = JSONObject.parseObject(s_userSessionInfo);
            userSessionInfo.setFriendID(jsonObject2.getString("id"));
        }
        catch (Exception e)
        {
            LogUtils.e(TAG, "run() 解析图片消息"+message.toString()+"异常,cause by:" + e);
            return;
        }
        // 接收图片
        JSONObject jsono = JSONObject.parseObject(s_msg);
        String chatType = jsono.getString("chatType");
        if (Integer.valueOf(chatType) == DWMessage.CHAT_TYPE_MULTI)
        {
            LogUtils.v(TAG, "run() 接收到一条聊天室图片消息："+jsono.toJSONString());
            // 发图片的人的dwID
            String fromDwID = jsono.getString("fromID");
            String myDwID = DecentWorldApp.getInstance().getDwID();
            if (!myDwID.equals(fromDwID))
            {
                String img = jsono.getString("img");
                String uri = jsono.getString("uri");
                String wealth = jsono.getString("wealth");
                long id = jsono.getLongValue("id");
                String roomID = message.getFrom().split("@")[0];
                final DWMessage dwMessage = new DWMessage(DWMessage.IMAGE , DWMessage.Direct.RECEIVE);
                dwMessage.setFrom(fromDwID);
                dwMessage.setTo(roomID);
                dwMessage.setWealth(wealth);
                dwMessage.setChatType(Integer.valueOf(chatType));
                File file = ImageUtils.AnalyticThumbnail(img);
                dwMessage.setUri(file.getAbsolutePath());
                dwMessage.setRemoteUrl(uri);
                dwMessage.setSendSuccess(1);
                dwMessage.setTxtMsgID(message.getPacketID());
                dwMessage.setMid(id);
                dwMessage.save();

                EventBus.getDefault().post(dwMessage, NotifyByEventBus.NT_CHAT_ROOM_MSG);
                // 聊天室图片消息通知
                MsgNotifyManager.getInstance().MultiNotify(dwMessage);
            }
        }
        else
        {
            LogUtils.v(TAG, "run() 接收到一条单聊图片消息");
            String img = jsono.getString("img");
            String uri = jsono.getString("uri");
            String wealth = jsono.getString("wealth");
            long id = jsono.getLongValue("id");
            String fromDwId = message.getFrom().split("@")[0];
            // 构造DWMessage
            final DWMessage dwMessage = new DWMessage(DWMessage.IMAGE , DWMessage.Direct.RECEIVE);
            dwMessage.setFrom(fromDwId);
            dwMessage.setWealth(wealth);
            dwMessage.setChatType(Integer.valueOf(chatType));
            /** 判断好友关系 **/
            if (ContactUserDao.isContact(fromDwId))
                dwMessage.setChatRelationship(DWMessage.CHAT_RELATIONSHIP_FRIEND);
            else
                dwMessage.setChatRelationship(DWMessage.CHAT_RELATIONSHIP_STRANGER);
            File file = ImageUtils.AnalyticThumbnail(img);
            dwMessage.setUri(file.getAbsolutePath());
            dwMessage.setRemoteUrl(uri);
            dwMessage.setSendSuccess(1);
            dwMessage.setTxtMsgID(message.getPacketID());
            dwMessage.setMid(id);
            dwMessage.save();
            processMsg(new MsgAndInfo(dwMessage , userSessionInfo));
        }
    }

    /**
     * 处理单聊信息
     * @param msgAndInfo
     */
    private void processMsg(MsgAndInfo msgAndInfo)
    {
        DWMessage dwMessage = msgAndInfo.getDwMessage();
        if (dwMessage.getChatType() != DWMessage.CHAT_TYPE_MULTI)
        {
            ConversationEngine.getInstance().refreshConversation(msgAndInfo, "【消息类型为单聊,发送更新陌生人消息列表的通知】");
            // 消息通知
            MsgNotifyManager.getInstance().SingleNotify(msgAndInfo);
            EventBus.getDefault().post(dwMessage, NotifyByEventBus.NT_UPDATE_CHAT_LISTVIEW_RECEIVE_MSG);
        }
    }
}
