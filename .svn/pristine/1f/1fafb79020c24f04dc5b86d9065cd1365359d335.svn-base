/**
 * 
 */
package cn.sx.decentworld.fragment.main;

import java.util.ArrayList;
import java.util.List;

import android.content.Intent;
import android.os.Handler;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import cn.sx.decentworld.DecentWorldApp;
import cn.sx.decentworld.R;
import cn.sx.decentworld.activity.MeSettingActivity_;
import cn.sx.decentworld.activity.RechargeBenefitActivity_;
import cn.sx.decentworld.adapter.IconPagerAdapter;
import cn.sx.decentworld.bean.UserExtraInfo;
import cn.sx.decentworld.bean.UserInfo;
import cn.sx.decentworld.bean.manager.UserInfoManager;
import cn.sx.decentworld.common.CommUtil;
import cn.sx.decentworld.component.ToastComponent;
import cn.sx.decentworld.fragment.BaseFragment;
import cn.sx.decentworld.fragment.me.AchievementFragment;
import cn.sx.decentworld.fragment.me.AchievementFragment_;
import cn.sx.decentworld.fragment.me.InnateFragment;
import cn.sx.decentworld.fragment.me.InnateFragment_;
import cn.sx.decentworld.fragment.me.WorkFragment;
import cn.sx.decentworld.fragment.me.WorkFragment_;
import cn.sx.decentworld.network.request.GetUserInfo;
import cn.sx.decentworld.utils.ImageLoaderHelper;
import cn.sx.decentworld.utils.ImageUtils;
import cn.sx.decentworld.utils.LogUtils;
import cn.sx.decentworld.utils.NetworkUtils;
import cn.sx.decentworld.widget.CustomScrollView;
import cn.sx.decentworld.widget.CustomScrollView.OnScrollListener;
import cn.sx.decentworld.widget.HackyViewPager;

import com.googlecode.androidannotations.annotations.AfterViews;
import com.googlecode.androidannotations.annotations.Bean;
import com.googlecode.androidannotations.annotations.EFragment;
import com.googlecode.androidannotations.annotations.ViewById;

/**
 * @ClassName: MeFragment.java
 * @Description:我的信息界面
 * @author: cj
 * @date: 2016年1月11日 上午11:17:51
 */
@EFragment(R.layout.fragment_me)
public class MeFragment extends BaseFragment implements OnClickListener
{
    /**
     * 常量
     */
    private static final String TAG = "MeFragment";
    private static final int GET_WORTH = 1;

    /**
     * 工具类
     */
    @Bean
    ToastComponent toast;
    @Bean
    GetUserInfo getUserInfo;

    /**
     * 界面资源
     */
    @ViewById(R.id.sv_chat_me)
    CustomScrollView sv_chat_me;
    /** 我的资料界面的标题栏 **/
    @ViewById(R.id.rel_me_title)
    RelativeLayout relMeTitle;
    @ViewById(R.id.vp_me_icon)
    HackyViewPager mPager;
    @ViewById(R.id.iv_me_doubt)
    ImageView iv_me_doubt;
    @ViewById(R.id.iv_me_recharge)
    ImageView iv_me_recharge;
    @ViewById(R.id.iv_me_setting)
    ImageView iv_me_setting;
    @ViewById(R.id.tv_me_name)
    TextView tv_me_name;
    @ViewById(R.id.tv_me_age)
    TextView tv_me_age;
    @ViewById(R.id.tv_me_gender)
    TextView tv_me_gender;
    @ViewById(R.id.tv_me_distance)
    TextView tv_me_distance;
    @ViewById(R.id.tv_me_occupation)
    TextView tv_me_occupation;
    @ViewById(R.id.tv_me_worth)
    TextView tv_me_worth;
    @ViewById(R.id.tv_me_sign)
    TextView tv_me_sign;

    @ViewById(R.id.tv_me_innate)
    TextView tv_me_innate;
    @ViewById(R.id.tv_me_achievement)
    TextView tv_me_achievement;
    @ViewById(R.id.tv_me_work)
    TextView tv_me_work;

    /**
     * 变量
     */
    /** 用户ID **/
    private String userID;
    private int index = 1;
    /** 顶部头像 **/
    private List<String> picUrls;
    private List<ImageView> imgvs;
    private IconPagerAdapter pagerAdapter;
    /** Fragment切换 **/
    private FragmentManager fragmentManager;
    private InnateFragment innateFragment;
    private AchievementFragment achievementFragment;
    private WorkFragment workFragment;

    /**
     * 入口
     */
    @AfterViews
    void init()
    {
        initVar();
        initListener();
        initView();
        setTabSelection(index);
        isPrepared = true;
        lazyLoad();
    }


    /**
     * 初始化变量
     */
    private void initVar()
    {
        userID = DecentWorldApp.getInstance().getDwID();
        fragmentManager = getFragmentManager();
        picUrls = new ArrayList<String>();
        imgvs = new ArrayList<ImageView>();
        pagerAdapter = new IconPagerAdapter(picUrls , imgvs);
        mPager.setAdapter(pagerAdapter);
        initViewPager();
    }

    /**
     * 初始化头像
     */
    private void initViewPager()
    {
        String iconMain = ImageUtils.getIconByDwID(userID, ImageUtils.ICON_MAIN);
        String iconExtra1 = ImageUtils.getIconByDwID(userID, ImageUtils.ICON_EXTRA_1);
        String iconExtra2 = ImageUtils.getIconByDwID(userID, ImageUtils.ICON_EXTRA_2);
        picUrls.add(iconMain);
        picUrls.add(iconExtra1);
        picUrls.add(iconExtra2);
        
        for(int i= 0;i<3;i++)
        {
            ImageView v = new ImageView(getActivity());
            v.setScaleType(ImageView.ScaleType.CENTER_CROP);
            imgvs.add(v);
        }
        
        if (pagerAdapter != null)
        {
            pagerAdapter.notifyDataSetChanged();
        }
        
        UserExtraInfo extraInfo = UserExtraInfo.queryBy(userID);
        if(extraInfo == null)
        {
            extraInfo = new UserExtraInfo();
        }
        extraInfo.setIcon(iconMain);
        extraInfo.setIcon2(iconExtra1);
        extraInfo.setIcon3(iconExtra2);
        extraInfo.save();
    }

    /**
     * 初始化监听
     */
    private void initListener()
    {
        iv_me_doubt.setOnClickListener(this);
        iv_me_recharge.setOnClickListener(this);
        iv_me_setting.setOnClickListener(this);
        tv_me_innate.setOnClickListener(this);
        tv_me_achievement.setOnClickListener(this);
        tv_me_work.setOnClickListener(this);
        sv_chat_me.setOnScrollListener(new OnScrollListener()
        {
            @Override
            public void onScroll(int scrollY)
            {
                if (scrollY >= 100)
                {
                    relMeTitle.setVisibility(View.GONE);
                }
                else
                {
                    relMeTitle.setVisibility(View.VISIBLE);
                }
            }
        });
    }
    
    /**
     * 初始化界面
     */
    private void initView()
    {
        UserInfo info = UserInfoManager.getUserInfoInstance();
        if(info != null)
        {
            tv_me_distance.setVisibility(View.GONE);
            if(CommUtil.isNotBlank(info.getRealName()))
                tv_me_name.setText(info.getRealName());
            if(CommUtil.isNotBlank(info.getAge()))
                tv_me_age.setText(info.getAge()+"");
            if(CommUtil.isNotBlank(info.getGender()))
                tv_me_gender.setText(info.getGender());
            if(CommUtil.isNotBlank(info.getOccupation()))
                tv_me_occupation.setText(info.getOccupation());
            if(CommUtil.isNotBlank(info.getSign()))
                tv_me_sign.setText(info.getSign());
            else
                tv_me_sign.setVisibility(View.GONE);
        }
    }


    /**
     * 加载数据
     */
    @Override
    protected void lazyLoad()
    {
        LogUtils.i(TAG, "lazyLoad");
        if (isPrepared)
        {
            if (NetworkUtils.isNetWorkConnected(getActivity()))
            {
                getUserInfo.getWorth(userID, handler, GET_WORTH);
            }
            else
            {
                /** 没有网络 **/
            }
        }
    }
    
    Handler handler = new Handler()
    {
        public void handleMessage(android.os.Message msg) {
            switch (msg.what)
            {
                case GET_WORTH:
                    String worth = msg.obj.toString();
                    tv_me_worth.setText(worth);
                    break;

                default:
                    break;
            }
        };
    };

    @Override
    public void turnToTab(int tab)
    {

    }

    /**
     * 点击事件
     */
    @Override
    public void onClick(View v)
    {
        Intent intent;
        switch (v.getId())
        {
            case R.id.iv_me_doubt:
                toast.show("去疑");
                break;
            case R.id.iv_me_recharge:
                /** 跳转到充值与收益 界面 **/
                intent = new Intent(getActivity(), RechargeBenefitActivity_.class);
                startActivity(intent);
                break;
            case R.id.iv_me_setting:
                /** 跳转到看自己的设置界面 **/
                intent = new Intent(getActivity() , MeSettingActivity_.class);
                startActivity(intent);
                break;
            case R.id.tv_me_innate:
                setTabSelection(1);
                break;
            case R.id.tv_me_achievement:
                setTabSelection(2);
                break;
            case R.id.tv_me_work:
                setTabSelection(3);
                break;
            default:
                break;
        }
    }
    
    /**
     * 选择
     * @param index
     */
    private void setTabSelection(int index)
    {
        setTabDefaultBackground();
        /** 开启一个Fragment事务 **/
        FragmentTransaction transaction = fragmentManager.beginTransaction();
        /** 先隐藏掉所有的Fragment，以防止有多个Fragment显示在界面上的情况 **/
        hideAllFragment(transaction);
        switch (index)
        {
            case 1:
                /** 天生 **/
                tv_me_innate.setTextColor(getResources().getColor(R.color.new_blue));
                if(innateFragment == null)
                {
                    innateFragment = new InnateFragment_();
                    transaction.add(R.id.fl_me_container, innateFragment);
                }
                else
                {
                    transaction.show(innateFragment);
                }
                
                break;
            case 2:
                /** 成就 **/
                tv_me_achievement.setTextColor(getResources().getColor(R.color.new_blue));
                if(achievementFragment == null)
                {
                    achievementFragment = new AchievementFragment_();
                    transaction.add(R.id.fl_me_container, achievementFragment);
                }
                else
                {
                    transaction.show(achievementFragment);
                }
                
                break;
            case 3:
                /** 作品 **/
                tv_me_work.setTextColor(getResources().getColor(R.color.new_blue));
                if(workFragment == null)
                {
                    workFragment = new WorkFragment_();
                    transaction.add(R.id.fl_me_container, workFragment);
                }
                else
                {
                    transaction.show(workFragment);
                }
                break;

            default:
                break;
        }
        transaction.commit();
    }


    /**
     * 隐藏所有的Fragment
     * @param transaction
     */
    private void hideAllFragment(FragmentTransaction transaction)
    {
        if(innateFragment != null)
        {
            transaction.hide(innateFragment);
        }
        if(achievementFragment != null)
        {
            transaction.hide(achievementFragment);
        }
        if(workFragment != null)
        {
            transaction.hide(workFragment);
        }
    }


    /**
     * 设置默认状态
     */
    private void setTabDefaultBackground()
    {
        tv_me_innate.setTextColor(getResources().getColor(R.color.black));
        tv_me_achievement.setTextColor(getResources().getColor(R.color.black));
        tv_me_work.setTextColor(getResources().getColor(R.color.black));
    }
    
    @Override
    public void onResume()
    {
        super.onResume();
        ImageLoaderHelper.clearCache();
        if (null != pagerAdapter)
        {
            pagerAdapter.notifyDataSetChanged();
        }
    }

}
