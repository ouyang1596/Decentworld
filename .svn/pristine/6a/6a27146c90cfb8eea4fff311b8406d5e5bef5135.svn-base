/**
 * 
 */
package cn.sx.decentworld.engine;

import cn.sx.decentworld.DecentWorldApp;
import cn.sx.decentworld.R;
import cn.sx.decentworld.bean.UserInfoField.Field;
import cn.sx.decentworld.common.CommUtil;
import cn.sx.decentworld.common.Constants;
import cn.sx.decentworld.entity.SelfUserField;
import cn.sx.decentworld.entity.SelfUserInfo;
import cn.sx.decentworld.entity.dao.DisplayAuthorityDao;
import cn.sx.decentworld.entity.db.DisplayAuthority;
import cn.sx.decentworld.entity.db.UserInfo;
import cn.sx.decentworld.logSystem.LogUtils;

import com.activeandroid.query.Select;

/**
 * @ClassName: UserInfoEngine.java
 * @Description: 个人信息管理模块（加载、修改、上传）、其它业务信息不能放到这个类中
 * @author: cj
 * @date: 2016年3月15日 下午3:31:03
 */
public class UserInfoEngine
{
    private static final String TAG = "UserInfoEngine";
    private static UserInfoEngine instance;
    // 用户ID
    private String userID = DecentWorldApp.getInstance().getDwID();
//    // 个人信息
//    private UserInfo userInfo;
//    // 权限信息
//    private DisplayAuthority displayAuthority;
    // 当前用户信息
    private SelfUserInfo mSelfUserInfo;

    private UserInfoEngine()
    {
    }

    /**
     * 获取实例
     * 
     * @return
     */
    public static UserInfoEngine getInstance()
    {
        if (instance == null)
        {
            synchronized (UserInfoEngine.class)
            {
                if (instance == null)
                {
                    instance = new UserInfoEngine();
                }
            }
        }
        return instance;
    }

    // ////////////////////////////////////////////初始化数据//////////////////////////////////////////
    /**
     * 初始化个人信息
     */
    public void initSelfUserInfo(SelfUserInfo info)
    {
        LogUtils.d(TAG, "initSelfUserInfo()");
        mSelfUserInfo = info;
    }

    /**
     * 获取个人信息
     */
    public SelfUserInfo getSelfUserInfo()
    {
        return mSelfUserInfo;
    }
    
    /**
     * 获取显示的名字，按优先级顺序显示，实名、昵称
     * @return 名字
     */
    public String getShowName()
    {
        /**  显示实名  **/
        SelfUserField realNameField = getSelfUserInfo().getSelfUserField(Field.REALNAME);
        if (realNameField != null)
        {
            boolean displayAuth = realNameField.isDisplayAuth();
            if(displayAuth)
            {
                String fieldValue = realNameField.getFieldValue();
                if (CommUtil.isNotBlank(fieldValue))
                {
                    LogUtils.v(TAG, "getShowName() showRealName="+fieldValue);
                    return fieldValue;
                }
            }
        }
        
        /**  显示昵称  **/
        SelfUserField nickNameField = getSelfUserInfo().getSelfUserField(Field.NICKNAME);
        if (nickNameField != null)
        {
            boolean displayAuth = nickNameField.isDisplayAuth();
            if(displayAuth)
            {
                String fieldValue = nickNameField.getFieldValue();
                if (CommUtil.isNotBlank(fieldValue))
                {
                    LogUtils.v(TAG, "getShowName() showNickName="+fieldValue);
                    return fieldValue;
                }
            }
        }
        LogUtils.v(TAG, "getShowName() the name is empty");
        return "";
    }

    /**
     * 当用户手动退出软件后，调用该函数清理内存中的数据
     */
    public void clear()
    {
        if (instance != null)
        {
            instance = null;
        }
    }

    // ////////////////////////////////////////对方公开的方法////////////////////////////////

    /**
     * 通知身价已经改变
     * 
     * @param worth
     */
    public void notifyWorthChanged(float worth)
    {
        LogUtils.i(TAG, "notifyWealthChanged,worth=" + worth);
        LogUtils.d(TAG, Constants.TEST_TAG +"notifyWorthChanged()");
//        if (worth != -1)
//        {
//            UserInfo userInfo = getUserInfo();
//            userInfo.setWorth(worth);
//            userInfo.save();
//        }
    }

    public void notifyWealthChanged(float wealth)
    {
        LogUtils.v(TAG, "notifyWealthChanged,wealth=" + wealth);
        LogUtils.d(TAG, Constants.TEST_TAG +"notifyWealthChanged()");
//        if (wealth != -1)
//        {
//            // 改变身家
//            UserInfo userInfo = getUserInfo();
//            userInfo.setWealth(wealth);
//            userInfo.save();
//        }
    }

    // ////////////////////////////////////////对方公开的方法////////////////////////////////

    // ////////////////////////////////////////私有方法////////////////////////////////////

    // ////////////////////////////////////////私有方法////////////////////////////////////


}
